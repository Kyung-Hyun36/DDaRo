<?xml version="1.0"?>

<robot name="ddaro_robot">
  <!-- Put all the color definitions in a separate file -->
  <material name="Black">
    <color rgba="0.2 0.2 0.2 1.0" />
  </material>
  <material name="TransparentBlack">
    <color rgba="0.2 0.2 0.2 1.0" />
  </material>
  <material name="Orange">
    <color rgba="1.0  0.55 0.0 1.0" />
  </material>
  <material name="Grey">
    <color rgba="0.7 0.7 0.7 1.0" />
  </material>
  <material name="DarkGrey">
    <color rgba="0.4 0.4 0.4 1.0" />
  </material>
  <material name="Red">
    <color rgba="0.8 0.0 0.0 1.0" />
  </material>
  <material name="TransparentRed">
    <color rgba="0.5 0.1 0.1 1.0" />
  </material>
  <material name="White">
    <color rgba="1.0 1.0 1.0 0.98" />
  </material>
  <material name="OffWhite">
    <color rgba="0.8 0.8 0.8 1.0" />
  </material>
  <material name="Blue">
    <color rgba="0.0 0.0 0.8 1.0" />
  </material>
  <material name="Green">
    <color rgba="0.0 0.8 0.0 1.0" />
  </material>
  <material name="TransparentGreen">
    <color rgba="0.0 0.8 0.0 0.5" />
  </material>
  <material name="TransparentBlue">
    <color rgba="0.0 0.0 0.6 0.8" />
  </material>
  <material name="TransparentYellow">
    <color rgba="0.8 0.8 0.1 1.0" />
  </material>

  <!-- Link -->
  <link name="fixed_base" /> <!-- 모바일로봇처럼 움직이는 로봇은 base_link는 더미 링크 위에 두어야한다. 여기서는 fixed_base는 더미
  링크이다.-->

  <link name="base_link">
    <visual>
      <origin rpy="0 0 0" xyz=" 0 0 0 " />
      <geometry>
        <mesh filename="package://ddaro_robot/description/meshes/Platform_Body_L.stl"
          scale="0.0005 0.0005 0.0005" />
      </geometry>
      <material name="Black" />
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz=" 0 0 -0.005" />
      <geometry>
        <cylinder length="0.0875" radius="0.075"/>
      </geometry>
    </collision>
    <inertial>
      <origin xyz="0.012 0 0" rpy="0 0 0" />
      <mass value="30" />
      <inertia ixx="0.06133" iyy="0.06133" izz="0.08437" ixy="0" ixz="0" iyz="0"/>
    </inertial>
  </link>

  <link name="base_l_wheel_link">
    <visual>
      <origin rpy="-1.5707963 0 0" xyz=" 0 0 0.207 " />
      <geometry>
        <mesh filename="package://ddaro_robot/description/meshes/Wheel_Drive_Left.stl"
          scale="0.0005 0.0005 0.0005" />
      </geometry>
      <material name="DarkGrey" />
    </visual>
    <collision>
      <origin xyz="0 0 0.1035" rpy="0 0 0" />
      <geometry>
        <cylinder length="0.025" radius="0.05" />
      </geometry>
    </collision>
    <inertial>
      <origin xyz="0 0 0.1035" rpy="0 0 0" />
      <mass value="10" />
      <inertia
        ixx="0.006770833333333334" ixy="0" ixz="0"
        iyy="0.006770833333333334" iyz="0"
        izz="0.0125" />
    </inertial>
  </link>

  <link name="base_r_wheel_link">
    <visual>
      <origin rpy="-1.5707963 0 0" xyz=" 0 0 -0.207 " />
      <geometry>
        <mesh filename="package://ddaro_robot/description/meshes/Wheel_Drive_Right.stl"
          scale="0.0005 0.0005 0.0005" />
      </geometry>
      <material name="DarkGrey" />
    </visual>
    <collision>
      <origin xyz="0 0 -0.1035" rpy="0 0 0" />
      <geometry>
        <cylinder length="0.025" radius="0.05" />
      </geometry>
    </collision>
    <inertial>
      <origin xyz="0 0 -0.1035" rpy="0 0 0" />
      <mass value="10" />
      <inertia
        ixx="0.006770833333333334" ixy="0" ixz="0"
        iyy="0.006770833333333334" iyz="0"
        izz="0.0125" />
    </inertial>
  </link>

  <link name="l_rear_caster_rotate">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0" />
      <geometry>
        <mesh filename="package://ddaro_robot/description/meshes/Caster_Yoke.stl"
          scale="0.0005 0.0005 0.0005" />
      </geometry>
      <material name="DarkGrey" />
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0" />
      <geometry>
        <box size="0.025 0.015 0.01" />
      </geometry>
    </collision>
    <inertial>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <mass value="1"/>
      <inertia ixx="2.70833e-05" ixy="0" ixz="0" iyy="6.04167e-05" iyz="0" izz="7.08333e-05" />
  </inertial>
  
  </link>

  <link name="l_rear_caster_wheel">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0" />
      <geometry>
        <mesh filename="package://ddaro_robot/description/meshes/Caster_Wheel.stl"
          scale="0.0005 0.0005 0.0005" />
      </geometry>
      <material name="DarkGrey" />
    </visual>
    <collision>
      <origin rpy="1.5707963 0 0" xyz="0 0 0.01" />
      <geometry>
        <cylinder length="0.015" radius="0.02" />
      </geometry>
    </collision>
    <inertial>
      <mass value="10" />
      <origin rpy="1.5707963 0 0" xyz="0 0 0" />
      <inertia ixx="0.0011875" ixy="0" ixz="0" iyy="0.0011875" iyz="0" izz="0.002"/>
    </inertial>
  </link>

  <link name="r_rear_caster_rotate">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0" />
      <geometry>
        <mesh filename="package://ddaro_robot/description/meshes/Caster_Yoke.stl"
          scale="0.0005 0.0005 0.0005" />
      </geometry>
      <material name="DarkGrey" />
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0" />
      <geometry>
        <box size="0.025 0.015 0.01" />
      </geometry>
    </collision>
    <inertial>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <mass value="1"/>
      <inertia ixx="2.70833e-05" ixy="0" ixz="0" iyy="6.04167e-05" iyz="0" izz="7.08333e-05" />
  </inertial>
  
  </link>

  <link name="r_rear_caster_wheel">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0" />
      <geometry>
        <mesh filename="package://ddaro_robot/description/meshes/Caster_Wheel.stl"
          scale="0.0005 0.0005 0.0005" />
      </geometry>
      <material name="DarkGrey" />
    </visual>
    <collision>
      <origin rpy="1.5724 0 0" xyz="0 0 0.01" />
      <geometry>
        <cylinder length="0.015" radius="0.02" />
      </geometry>
    </collision>
    <inertial>
      <mass value="10" />
      <origin rpy="1.5707963 0 0" xyz="0 0 0" />
      <inertia ixx="0.0011875" ixy="0" ixz="0" iyy="0.0011875" iyz="0" izz="0.002"/>
    </inertial>
  </link>

  <link name="camera_link">
    <visual>
      <origin xyz="0 0 0" rpy="0 0 0" />
      <geometry>
        <box size="0.025 0.015 0.01" />
      </geometry>
      <material name="TransparentRed" />
    </visual>
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0" />
      <geometry>
        <box size="0.025 0.015 0.01" />
      </geometry>
    </collision>
  </link>

  <link name="lidar_link">
    <visual>
      <origin xyz="0 0 -0.01" rpy="0 0 0" />
      <geometry>
        <cylinder length="0.015" radius="0.03" />
      </geometry>
      <material name="lidar_color">
        <color rgba="0.2 0.2 0.5 1" />
      </material>
    </visual>
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0" />
      <geometry>
        <cylinder length="0.015" radius="0.03" />
      </geometry>
    </collision>
  </link>

  <link name="base_Upperlink">
    <visual>
      <origin rpy="0 0 0" xyz=" 0 0 0 " />
      <geometry>
        <mesh filename="package://ddaro_robot/description/meshes/Platform_Body_U.stl"
          scale="0.0005 0.0005 0.0005" />
      </geometry>
      <material name="TransparentRed" />
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0" />
      <geometry>
        <cylinder length="0.005" radius="0.005" />
      </geometry>
    </collision>
    <inertial>
      <origin xyz="0.012 0 0" rpy="0 0 0" />
      <mass value="30" />
      <inertia ixx="0.06133" iyy="0.06133" izz="0.08437" ixy="0" ixz="0" iyz="0"/>
    </inertial>
  </link>

  <link name="ddaro_link">
    <visual>
      <origin rpy="0 0 3.141592" xyz=" -0.38 0 0.118 " />
      <geometry>
        <mesh filename="package://ddaro_robot/description/meshes/ddaro_ddemo.stl"
          scale="0.00005 0.00005 0.00005" />
      </geometry>
      <material name="TransparentRed" />
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0" />
      <geometry>
        <cylinder length="0.005" radius="0.005" />
      </geometry>
    </collision>
    <inertial>
      <origin xyz="0.012 0 0" rpy="0 0 0" />
      <mass value="30" />
      <inertia ixx="0.06133" iyy="0.06133" izz="0.08437" ixy="0" ixz="0" iyz="0"/>
    </inertial>
  </link>

  <!-- Joint -->
  <joint name="fixed_base_to_base_link" type="fixed">
    <parent link="fixed_base" />
    <child link="base_link" />
    <origin xyz="0 0 0.03" rpy="0 0 0" />
  </joint>

  <joint name="base_l_wheel_joint" type="continuous">
    <parent link="base_link" />
    <child link="base_l_wheel_link" />
    <axis xyz="0 0 -1" />
    <origin rpy="1.5707963 0 0" xyz="0.0 0.207 0" />
    <dynamics
      friction="1"
      damping="0.7" />
  </joint>

  <joint name="base_r_wheel_joint" type="continuous">
    <parent link="base_link" />
    <child link="base_r_wheel_link" />
    <axis xyz="0 0 -1" />
    <origin rpy="1.5707963 0 0" xyz="0.0 -0.207 0" />
    <dynamics
      friction="1"
      damping="0.7" />
  </joint>

  <joint name="l_rear_caster_rotate_joint" type="fixed">
    <parent link="base_link" />
    <child link="l_rear_caster_rotate" />
    <origin rpy="0 0 0" xyz="-0.150 -0.08 -0.01125" />
    <axis xyz="0 0 1" />
  </joint>

  <joint name="l_rear_caster_wheel_joint" type="fixed">
    <parent link="l_rear_caster_rotate" />
    <child link="l_rear_caster_wheel" />
    <dynamics friction="1" damping="0.7" />
    <origin rpy="0 0 0" xyz="-0.011 0 -0.0235" />
    <axis xyz="0 1 0" />
  </joint>

  <joint name="r_rear_caster_rotate_joint" type="fixed">
    <parent link="base_link" />
    <child link="r_rear_caster_rotate" />
    <origin rpy="0 0 0" xyz="-0.150 0.08 -0.01125" />
    <axis xyz="0 0 1" />
  </joint>

  <joint name="r_rear_caster_wheel_joint" type="fixed">
    <parent link="r_rear_caster_rotate" />
    <child link="r_rear_caster_wheel" />
    <dynamics friction="1" damping="0.7" />
    <origin rpy="0 0 0" xyz="-0.011 0 -0.0235" />
    <axis xyz="0 1 0" />
  </joint>

  <joint name="base_Upperjoint" type="fixed">
    <origin rpy="0 0 0" xyz="0.0 0.0 0.0" />
    <parent link="base_link" />
    <child link="base_Upperlink" />
  </joint>

  <joint name="ddaro_link" type="fixed">
    <origin rpy="0 0 0" xyz="0.0 0.0 0.0" />
    <parent link="base_Upperlink" />
    <child link="ddaro_link" />
  </joint>

  <joint name="camera_joint" type="fixed">
    <parent link="base_link" />
    <child link="camera_link" />
    <origin xyz="0.075 0.0 0.216" rpy="0 0 0" />
  </joint>

  <joint name="lidar_joint" type="fixed">
    <parent link="base_link" />
    <child link="lidar_link" />
    <origin xyz="0.0 0.0 0.0775" rpy="0 0 0" />
  </joint>

  <!-- for gazebo -->
  <gazebo reference="base_link">
    <material>Gazebo/Grey</material> <!--색상
    정보 입력-->
    <mu1>0.0</mu1>
    <mu2>0.0</mu2>
  </gazebo>

  <!-- camera -->
  <gazebo reference="camera_link">
    <material>Gazebo/Red</material>
    <sensor type="camera" name="camera1">
      <update_rate>30.0</update_rate>
      <camera name="head">
        <horizontal_fov>1.3962634</horizontal_fov>
        <image>
          <width>800</width>
          <height>800</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.02</near>
          <far>300</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <!-- Noise is sampled independently per pixel on each frame.
 That pixel's noise value is added to each of its color
 channels, which at that point lie in the range [0,1]. -->
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
        <alwaysOn>true</alwaysOn>
        <updateRate>0.0</updateRate>
        <cameraName>camera1</cameraName>
        <imageTopicName>image_raw</imageTopicName>
        <cameraInfoTopicName>camera_info</cameraInfoTopicName>
        <frameName>camera_link</frameName>
        <hackBaseline>0.07</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
      </plugin>
    </sensor>
  </gazebo>

  <!--lidar-->
  <gazebo reference="lidar_link">
    <material>Gazebo/Black</material>
    <sensor type="ray" name="lidar_sensor">
      <pose>0 0 0 0 0 0</pose>
      <!--<always_on>true</always_on>-->
      <visualize>true</visualize> <!--Gazebo에서
      ray가 나가는 모습을 볼것이냐를 설정-->
      <update_rate>40</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>720</samples>
            <resolution>1</resolution>
            <min_angle>-1.5724</min_angle>
            <max_angle>1.5724</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.1</min>
          <max>15.0</max>
          <resolution>0.01</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <!-- Noise parameters based on published spec for Hokuyo laser
 achieving "+-30mm" accuracy at range < 10m. A mean of 0.0m and
 stddev of 0.01m will put 99.7% of samples within 0.03m of the true
 reading. -->
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin name="gazebo_ros_head_lidar_controller" filename="libgazebo_ros_ray_sensor.so">
        <ros>
          <remapping>~/out:=scan</remapping>
          <!--<argument>~/out:=scan</argument>-->
        </ros>
        <output_type>sensor_msgs/LaserScan</output_type>
        <frameName>lidar_link</frameName>
      </plugin>
    </sensor>
  </gazebo>

  <gazebo reference="base_l_wheel_link">
    <mu1>1.0</mu1>
    <mu2>1.0</mu2>
    <kp>500000.0</kp>
    <kd>10.0</kd>
    <material>Gazebo/Black</material>
  </gazebo>

  <gazebo reference="base_r_wheel_link">
    <mu1>1.0</mu1><!--마찰-->
    <mu2>1.0</mu2>
    <kp>500000.0</kp><!--탄성-->
    <kd>10.0</kd> <!--댐퍼-->
    <material>Gazebo/Black</material>
  </gazebo>

  <gazebo reference="r_rear_caster_wheel">
    <!-- <mu1>1.0</mu1>
		<mu2>1.0</mu2>
		<kp>5000.0</kp>
		<kd>10.0</kd> -->
    <material>Gazebo/Black</material>
  </gazebo>

  <gazebo reference="l_rear_caster_wheel">
    <!-- <mu1>1.0</mu1>
		<mu2>1.0</mu2>
		<kp>5000.0</kp>
		<kd>10.0</kd> -->
    <material>Gazebo/Black</material>
  </gazebo>

  <gazebo reference="base_Upperlink">
    <material>Gazebo/Red</material>
  </gazebo>

  <gazebo reference="ddaro_link">
    <material>Gazebo/Red</material>
  </gazebo>

  <gazebo>
    <plugin name='diff_drive' filename='libgazebo_ros_diff_drive.so'>
      <ros>
        <remapping>cmd_vel:=cmd_vel</remapping>
        <remapping>odom:=odom</remapping>
      </ros>
      <update_rate>20</update_rate>

      <left_joint>base_l_wheel_joint</left_joint>
      <right_joint>base_r_wheel_joint</right_joint>

      <wheel_separation>0.32</wheel_separation>
      <wheel_diameter>0.20</wheel_diameter>

      <max_wheel_torque>20</max_wheel_torque>
      <max_wheel_acceleration>0.5</max_wheel_acceleration>

      <command_topic>cmd_vel</command_topic>

      <publish_odom>true</publish_odom>
      <publish_odom_tf>true</publish_odom_tf>
      <publish_wheel_tf>true</publish_wheel_tf>

      <odometry_topic>odom</odometry_topic>
      <odometry_frame>odom</odometry_frame>
      <robot_base_frame>fixed_base</robot_base_frame>
    </plugin>
  </gazebo>

</robot>